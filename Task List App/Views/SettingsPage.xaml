<Page
    x:Class="Task_List_App.Views.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
    xmlns:behaviors="using:Task_List_App.Behaviors"
    xmlns:ctrls="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extras="using:Task_List_App.Controls"
    xmlns:helper="using:Task_List_App.Helpers"
    xmlns:input="using:Microsoft.UI.Input"
    xmlns:interact="using:Microsoft.Xaml.Interactivity"
    xmlns:local="using:Task_List_App.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="using:Task_List_App.Models"
    xmlns:sys="using:System"
    xmlns:ui="using:CommunityToolkit.WinUI.UI"
    xmlns:xaml="using:Microsoft.UI.Xaml"
    behaviors:NavigationViewHeaderBehavior.HeaderMode="Always"
    mc:Ignorable="d">

    <Page.Resources>
        <SolidColorBrush
            x:Key="SampleBrush1"
            Opacity="0.5"
            Color="#5FB2F2" />

        <Style TargetType="extras:CursorGrid">
            <Setter Property="BorderBrush" Value="{ThemeResource SecondaryBrush}" />
            <Setter Property="CornerRadius" Value="5" />
            <Setter Property="Padding" Value="20" />
            <Setter Property="Margin" Value="1,20,20,20" />
            <Setter Property="RowSpacing" Value="30" />
            <Setter Property="BorderThickness" Value="1" />
        </Style>

        <Style BasedOn="{StaticResource DefaultToggleSwitchStyle}" TargetType="ToggleSwitch">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="OnContent" Value="Enabled" />
            <Setter Property="OffContent" Value="Disabled" />
        </Style>

        <Style BasedOn="{StaticResource DefaultComboBoxStyle}" TargetType="ComboBox">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="SelectedIndex" Value="0" />
            <!-- [this was throwing a null exception]
            <Setter Property="ItemsSource" Value="{x:Bind extras:CursorGrid.CursorOptions}" />
            -->
        </Style>

        <!--
            NOTE: The GroupBox control will not render properly without a default styler.
            Without a styler, the ChildPresenter will be seen, but the BorderPath and HeadingPresenter will not be visible.
        -->
        <Style TargetType="extras:GroupBox">
            <Setter Property="BorderBrush" Value="{ThemeResource PrimaryBrush}" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="CornerRadius" Value="6" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="extras:GroupBox">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <!--  Border Line  -->
                            <Path x:Name="PART_BorderPath" Stroke="{TemplateBinding BorderBrush}" />
                            <!--  Heading Text  -->
                            <ContentPresenter
                                x:Name="PART_HeadingPresenter"
                                Content="{TemplateBinding Heading}"
                                ContentTemplate="{TemplateBinding HeadingTemplate}"
                                ContentTemplateSelector="{TemplateBinding HeadingTemplateSelector}" />
                            <!--  Control Content  -->
                            <ContentPresenter
                                x:Name="PART_ChildPresenter"
                                Grid.Row="1"
                                Grid.ColumnSpan="2"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <!--  [Root Grid]  -->
    <Grid>
        <ScrollViewer>
            <StackPanel x:Name="ContentArea">
                <StackPanel.ChildrenTransitions>
                    <TransitionCollection>
                        <AddDeleteThemeTransition />
                    </TransitionCollection>
                </StackPanel.ChildrenTransitions>

                <!--
                    [Personalization]
                -->
                <extras:CompositionShadow
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    BlurRadius="6"
                    Brush="{ThemeResource SecondaryBrush}"
                    OffsetX="3"
                    OffsetY="2">
                    <TextBlock x:Uid="Settings_Personalization" Style="{ThemeResource SubtitleTextBlockStyle}" />
                </extras:CompositionShadow>

                <StackPanel Margin="{StaticResource SmallTopBottomMargin}">
                    <!--
                        [Theme]
                    -->
                    <TextBlock x:Uid="Settings_Theme" />
                    <StackPanel Margin="{StaticResource XSmallTopMargin}">
                        <RadioButton
                            x:Uid="Settings_Theme_Light"
                            Command="{x:Bind ViewModel.SwitchThemeCommand}"
                            FontSize="15"
                            GroupName="AppTheme"
                            IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBoolean}, ConverterParameter=Light, Mode=OneWay}">
                            <RadioButton.CommandParameter>
                                <xaml:ElementTheme>Light</xaml:ElementTheme>
                            </RadioButton.CommandParameter>
                        </RadioButton>
                        <RadioButton
                            x:Uid="Settings_Theme_Dark"
                            Command="{x:Bind ViewModel.SwitchThemeCommand}"
                            FontSize="15"
                            GroupName="AppTheme"
                            IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBoolean}, ConverterParameter=Dark, Mode=OneWay}">
                            <RadioButton.CommandParameter>
                                <xaml:ElementTheme>Dark</xaml:ElementTheme>
                            </RadioButton.CommandParameter>
                        </RadioButton>
                        <RadioButton
                            x:Uid="Settings_Theme_Default"
                            Command="{x:Bind ViewModel.SwitchThemeCommand}"
                            FontSize="15"
                            GroupName="AppTheme"
                            IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBoolean}, ConverterParameter=Default, Mode=OneWay}">
                            <RadioButton.CommandParameter>
                                <xaml:ElementTheme>Default</xaml:ElementTheme>
                            </RadioButton.CommandParameter>
                        </RadioButton>
                        <!--
                            [Other Options]
                        -->
                        <extras:CompositionShadow
                            Margin="0,12,0,5"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            BlurRadius="6"
                            Brush="{ThemeResource SecondaryBrush}"
                            OffsetX="3"
                            OffsetY="2">
                            <TextBlock x:Uid="Settings_Other" Style="{ThemeResource SubtitleTextBlockStyle}" />
                        </extras:CompositionShadow>
                        <CheckBox
                            Command="{x:Bind ViewModel.ToggleNotificationsCommand}"
                            CommandParameter="{x:Bind ViewModel.ShowNotifications, Mode=TwoWay}"
                            Content="Toast Notifications"
                            FontSize="14"
                            IsChecked="{x:Bind ViewModel.ShowNotifications, Mode=TwoWay}"
                            ToolTipService.ToolTip="Create toast notification for past-due tasks">
                            <!--
                            <CheckBox.CommandParameter>
                                <x:Boolean>False</x:Boolean>
                            </CheckBox.CommandParameter>
                            -->
                        </CheckBox>
                        <CheckBox
                            Command="{x:Bind ViewModel.PersistLoginCommand}"
                            CommandParameter="{x:Bind ViewModel.PersistLogin, Mode=TwoWay}"
                            Content="Stay Logged In"
                            FontSize="14"
                            IsChecked="{x:Bind ViewModel.PersistLogin, Mode=TwoWay}"
                            ToolTipService.ToolTip="Prevent or enable the inactivity timeout">
                            <!--
                            <CheckBox.CommandParameter>
                                <x:Boolean>False</x:Boolean>
                            </CheckBox.CommandParameter>
                            -->
                        </CheckBox>
                        <CheckBox
                            Command="{x:Bind ViewModel.AcrylicBackdropCommand}"
                            CommandParameter="{x:Bind ViewModel.AcrylicBackdrop, Mode=TwoWay}"
                            Content="Use Acrylic Backdrop"
                            FontSize="14"
                            IsChecked="{x:Bind ViewModel.AcrylicBackdrop, Mode=TwoWay}"
                            ToolTipService.ToolTip="Requires app restart">
                            <!--
                            <CheckBox.CommandParameter>
                                <x:Boolean>False</x:Boolean>
                            </CheckBox.CommandParameter>
                            -->
                        </CheckBox>
                        <CheckBox
                            Command="{x:Bind ViewModel.ToggleOverdueSummaryCommand}"
                            CommandParameter="{x:Bind ViewModel.ShowOverdueSummary, Mode=TwoWay}"
                            Content="Show Overdue Summary"
                            FontSize="14"
                            IsChecked="{x:Bind ViewModel.ShowOverdueSummary, Mode=TwoWay}"
                            ToolTipService.ToolTip="Dialog for overdue completed tasks">
                            <!--
                            <CheckBox.CommandParameter>
                                <x:Boolean>False</x:Boolean>
                            </CheckBox.CommandParameter>
                            -->
                        </CheckBox>
                        <CheckBox
                            Command="{x:Bind ViewModel.ToggleOpenUrlCommand}"
                            CommandParameter="{x:Bind ViewModel.OpenUrl, Mode=TwoWay}"
                            Content="Automatically Open URLs"
                            FontSize="14"
                            IsChecked="{x:Bind ViewModel.OpenUrl, Mode=TwoWay}"
                            ToolTipService.ToolTip="Opens URL using default browser">
                            <!--
                            <CheckBox.CommandParameter>
                                <x:Boolean>False</x:Boolean>
                            </CheckBox.CommandParameter>
                            -->
                        </CheckBox>
                    </StackPanel>
                </StackPanel>

                <!--
                    [Restore button using Microsoft.Xaml.Interactivity]
                -->
                <Button
                    x:Name="btnRestore"
                    x:Uid="Settings_RestoreData"
                    Margin="1,10,1,26"
                    ui:FrameworkElementExtensions.Cursor="Hand"
                    Command="{x:Bind ViewModel.RestoreDataCommand}"
                    CornerRadius="5"
                    FontSize="{StaticResource MediumFontSize}"
                    FontWeight="SemiBold"
                    Foreground="{ThemeResource LightBackgroundBrush}"
                    IsEnabled="{x:Bind ViewModel.IsBusy, Converter={StaticResource BooleanInverter}, Mode=OneWay}"
                    ToolTipService.ToolTip="Replaces the current database with the backup database">
                    <Button.Resources>
                        <StaticResource x:Key="ButtonBackground" ResourceKey="SystemControlTransparentBrush" />
                        <StaticResource x:Key="ButtonBorderBrush" ResourceKey="SystemControlTransparentBrush" />
                    </Button.Resources>
                    <interact:Interaction.Behaviors>
                        <extras:SnapButtonBehavior SnapType="Left" />
                    </interact:Interaction.Behaviors>
                </Button>

                <!--
                    [About]
                -->
                <extras:CompositionShadow
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    BlurRadius="6"
                    Brush="{ThemeResource SecondaryBrush}"
                    OffsetX="3"
                    OffsetY="2">
                    <TextBlock x:Uid="Settings_About" Style="{ThemeResource SubtitleTextBlockStyle}" />
                </extras:CompositionShadow>
                <StackPanel Margin="{StaticResource XSmallTopMargin}">
                    <TextBlock Style="{ThemeResource BodyTextBlockStyle}" Text="{x:Bind ViewModel.VersionDescription, Mode=OneWay}" />
                    <TextBlock
                        x:Uid="Settings_AboutDescription"
                        MaxWidth="400"
                        Margin="{StaticResource XSmallTopMargin}"
                        HorizontalAlignment="Left"
                        Style="{ThemeResource BodyTextBlockStyle}"
                        TextWrapping="Wrap" />
                    <HyperlinkButton x:Uid="SettingsPage_PrivacyTermsLink" Margin="{StaticResource SettingsPageHyperlinkButtonMargin}" />
                </StackPanel>

                <!--
                    [Formatted Date]
                -->
                <TextBlock
                    Margin="0,6,34,6"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    FontSize="{ThemeResource LargeFontSize}"
                    Foreground="{ThemeResource QuaternaryBrush}"
                    Text="{x:Bind local:AssemblyHelper.GetFormattedDate()}" />


                <!--  separator line  -->
                <extras:SeparatorLine />

                <!--
                    [ReadMe Markdown]
                -->
                <Expander
                    Margin="0,12,30,8"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Bottom"
                    Background="Transparent">
                    <Expander.Header>
                        <Grid ColumnSpacing="10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <BitmapIcon
                                Grid.Column="0"
                                Height="28"
                                HorizontalAlignment="Left"
                                ShowAsMonochrome="False"
                                UriSource="/Assets/Check_Logo.png" />
                            <TextBlock
                                Grid.Column="1"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                FontSize="{StaticResource MediumFontSize}"
                                Foreground="{ThemeResource SecondaryBrush}"
                                Text="ReadMe" />
                        </Grid>
                    </Expander.Header>
                    <!--
                        The NuGet "CommunityToolkit.WinUI.UI.Controls.Markdown" was added soley for this embedded ReadMe functionality.
                        https://learn.microsoft.com/en-us/dotnet/api/communitytoolkit.winui.ui.controls?view=win-comm-toolkit-dotnet-7.0
                    -->
                    <ctrls:MarkdownTextBlock
                        x:Name="mdReadMe"
                        Margin="2"
                        Background="Transparent"
                        CodeBackground="Transparent"
                        ImageClicked="mdReadMe_ImageClicked"
                        ImageMaxHeight="600"
                        ImageMaxWidth="600"
                        ImageResolving="mdReadMe_ImageResolving"
                        IsFocusEngagementEnabled="False"
                        IsHitTestVisible="True"
                        LinkClicked="mdReadMe_LinkClicked"
                        SchemeList="uwpct" />
                </Expander>

            </StackPanel>
        </ScrollViewer>

        <!--  [InfoBar Messages]  -->
        <extras:AutoCloseInfoBar
            x:Name="infoBar"
            Margin="0,0,20,20"
            VerticalAlignment="Bottom"
            AutoCloseInterval="5000"
            Background="{ThemeResource InfoBarBrush}"
            IsOpen="False"
            Severity="Informational" />
    </Grid>
</Page>
